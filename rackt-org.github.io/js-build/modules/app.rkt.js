import * as $rjs_core from '../runtime/core.js';import * as M0 from "../rackt/main.rkt.js";import * as M1 from "../runtime/kernel.rkt.js";import * as M2 from "../links/racketscript-compiler/racketscript/private/interop.rkt.js";import * as M3 from "./counter-new.rkt.js";import * as M4 from "./todo-new.rkt.js";import * as M5 from "../collects/racket/private/kw.rkt.js";var header = $rjs_core.attachProcedureArity(function(props1, ...__dot__dot_21) {if (arguments.length<1) {throw $rjs_core.racketContractError("arity mismatch");} else {}var __dot__dot_2 = $rjs_core.Pair.listFromArray(__dot__dot_21);var temp5 = $rjs_core.UString.make("header");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_73 = M0.__lt_el;var temp24 = $rjs_core.UString.make("div");var temp35 = {'className':$rjs_core.UString.make("header-content")};var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_79 = M0.__lt_el;var temp710 = $rjs_core.UString.make("img");var temp811 = {'src':$rjs_core.UString.make("https://raw.githubusercontent.com/rackt-org/rackt-org.github.io/master/logo.png"),'className':$rjs_core.UString.make("logo")};var temp46 = M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_79,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),3)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp811),temp710);var temp2 = $rjs_core.UString.make("h1");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_712 = M0.__lt_el;var temp913 = $rjs_core.UString.make("a");var temp1014 = {'href':$rjs_core.UString.make("https://github.com/rackt-org/rackt")};var temp1115 = $rjs_core.UString.make("Rackt");var temp57 = M0.__lt_el(temp2,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_712,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp1014),temp913,temp1115));var temp4 = $rjs_core.UString.make("p");var temp3 = $rjs_core.UString.make("A React wrapper written in ");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_716 = M0.__lt_el;var temp1217 = $rjs_core.UString.make("a");var temp1318 = {'href':$rjs_core.UString.make("https://github.com/vishesh/racketscript")};var temp1419 = $rjs_core.UString.make("RacketScript");var temp68 = M0.__lt_el(temp4,temp3,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_716,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp1318),temp1217,temp1419));return M0.__lt_el(temp5,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_73,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),6)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp35),temp24,temp46,temp57,temp68));});var intro = $rjs_core.attachProcedureArity(function(props20, ...__dot__dot_216) {if (arguments.length<1) {throw $rjs_core.racketContractError("arity mismatch");} else {}var __dot__dot_21 = $rjs_core.Pair.listFromArray(__dot__dot_216);var temp15 = $rjs_core.UString.make("div");var temp14 = M0.__lt_el($rjs_core.UString.make("p"),$rjs_core.UString.make("Rackt is a React wrapper that allows you to write functional components with React hooks, contexts, and so on."),$rjs_core.UString.make("\n"),$rjs_core.UString.make("As a first step, you can use almost exactly the same React API that you're used to because it seemlessly interoperates with JS under the hood."),$rjs_core.UString.make("\n"),$rjs_core.UString.make("Here is an example of a simple Rackt component:"));var temp12 = $rjs_core.UString.make("pre");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_98_2322 = M0.__lt_el;var temp1623 = $rjs_core.UString.make("code");var temp1724 = {'className':$rjs_core.UString.make("language-racket")};var temp1825 = $rjs_core.UString.make("(define (simple-component props . ..)\n    (<> \"div\" #:props ([ className \"some-class\" ]) \"some text\"))");var temp13 = M0.__lt_el(temp12,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_98_2322,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp1724),temp1623,temp1825));var temp11 = M0.__lt_el($rjs_core.UString.make("p"),M0.__lt_el($rjs_core.UString.make("code"),$rjs_core.UString.make("<>")),$rjs_core.UString.make(" here is a simple alias for the "),M0.__lt_el($rjs_core.UString.make("code"),$rjs_core.UString.make("React.createElement")),$rjs_core.UString.make(" function\n        that has optional an "),M0.__lt_el($rjs_core.UString.make("code"),$rjs_core.UString.make("#:props")),$rjs_core.UString.make(" parameter so you can skip it if you want:"));var temp9 = $rjs_core.UString.make("pre");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_726 = M0.__lt_el;var temp1927 = $rjs_core.UString.make("code");var temp2028 = {'className':$rjs_core.UString.make("language-racket")};var temp2129 = $rjs_core.UString.make("(define (simple-component props . ..)\n    (<> \"div\" \"some text\"))");var temp10 = M0.__lt_el(temp9,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_726,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp2028),temp1927,temp2129));var temp8 = M0.__lt_el($rjs_core.UString.make("p"),$rjs_core.UString.make("Because it's written with RacketScript, however, Rackt takes advantage of Racket's powerful macros in order to simplify and hide a lot of boilerplate that you would normally have to write in plain JS:"));var temp7 = $rjs_core.UString.make("pre");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_98_2330 = M0.__lt_el;var temp2231 = $rjs_core.UString.make("code");var temp2332 = {'className':$rjs_core.UString.make("language-racket")};var temp2433 = $rjs_core.UString.make("(define-component simple-component\n    (<> \"div\" #:props ([ className \"some-class\" ]) ($props 'value))");return M0.__lt_el(temp15,temp14,temp13,temp11,temp10,temp8,M0.__lt_el(temp7,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_98_2330,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp2332),temp2231,temp2433)),M0.__lt_el($rjs_core.UString.make("p"),$rjs_core.UString.make("Here "),M0.__lt_el($rjs_core.UString.make("code"),$rjs_core.UString.make("define-component")),$rjs_core.UString.make(" defines a React component, but automatically propagates the \"props\" for you in the implicit "),M0.__lt_el($rjs_core.UString.make("code"),$rjs_core.UString.make("$props")),$rjs_core.UString.make(" variable.")),M0.__lt_el($rjs_core.UString.make("p"),$rjs_core.UString.make("In the examples below you can see more complex components and apps (btw this site is written in Rackt as well), and how Rackt and RacketScript help to manage and reduce this complexity.")));});var counter_example = $rjs_core.attachProcedureArity(function(props34, ...__dot__dot_3516) {if (arguments.length<1) {throw $rjs_core.racketContractError("arity mismatch");} else {}var __dot__dot_35 = $rjs_core.Pair.listFromArray(__dot__dot_3516);var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_736 = M0.__lt_el;var temp2637 = $rjs_core.UString.make("div");var temp2738 = {'className':$rjs_core.UString.make("example")};var temp2839 = M0.__lt_el($rjs_core.UString.make("div"),M0.__lt_el($rjs_core.UString.make("h3"),$rjs_core.UString.make("Counter")),M0.__lt_el(M3.counter));var temp19 = $rjs_core.UString.make("div");var temp18 = M0.__lt_el($rjs_core.UString.make("h3"),$rjs_core.UString.make("Source code"));var temp17 = $rjs_core.UString.make("pre");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_741 = M0.__lt_el;var temp3042 = $rjs_core.UString.make("code");var temp3143 = {'className':$rjs_core.UString.make("language-racket")};var counter_source_code3244 = counter_source_code;var temp2940 = M0.__lt_el(temp19,temp18,M0.__lt_el(temp17,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_741,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp3143),temp3042,counter_source_code3244)));return M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_736,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),5)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp2738),temp2637,temp2839,temp2940);});var todo_example = $rjs_core.attachProcedureArity(function(props45, ...__dot__dot_4620) {if (arguments.length<1) {throw $rjs_core.racketContractError("arity mismatch");} else {}var __dot__dot_46 = $rjs_core.Pair.listFromArray(__dot__dot_4620);var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_747 = M0.__lt_el;var temp3448 = $rjs_core.UString.make("div");var temp3549 = {'className':$rjs_core.UString.make("example")};var temp3650 = M0.__lt_el($rjs_core.UString.make("div"),M0.__lt_el($rjs_core.UString.make("h3"),$rjs_core.UString.make("Todo app")),M0.__lt_el(M4.todo_app));var temp23 = $rjs_core.UString.make("div");var temp22 = M0.__lt_el($rjs_core.UString.make("h3"),$rjs_core.UString.make("Source code"));var temp21 = $rjs_core.UString.make("pre");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_752 = M0.__lt_el;var temp3853 = $rjs_core.UString.make("code");var temp3954 = {'className':$rjs_core.UString.make("language-racket")};var todo_source_code4055 = todo_source_code;var temp3751 = M0.__lt_el(temp23,temp22,M0.__lt_el(temp21,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_752,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp3954),temp3853,todo_source_code4055)));return M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_747,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),5)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp3549),temp3448,temp3650,temp3751);});var todo_orig_example = $rjs_core.attachProcedureArity(function(props56, ...__dot__dot_5724) {if (arguments.length<1) {throw $rjs_core.racketContractError("arity mismatch");} else {}var __dot__dot_57 = $rjs_core.Pair.listFromArray(__dot__dot_5724);var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_758 = M0.__lt_el;var temp4259 = $rjs_core.UString.make("div");var temp4360 = {'className':$rjs_core.UString.make("example")};var temp27 = $rjs_core.UString.make("div");var temp26 = M0.__lt_el($rjs_core.UString.make("p"),$rjs_core.UString.make("For reference, here is the same todo app written with a lower level React API"));var temp25 = $rjs_core.UString.make("pre");var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_762 = M0.__lt_el;var temp4563 = $rjs_core.UString.make("code");var temp4664 = {'className':$rjs_core.UString.make("language-racket")};var todo_orig_source_code4765 = todo_orig_source_code;var temp4461 = M0.__lt_el(temp27,temp26,M0.__lt_el(temp25,M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_762,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp4664),temp4563,todo_orig_source_code4765)));return M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_758,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp4360),temp4259,temp4461);});var app = $rjs_core.attachProcedureArity(function(props66, ...__dot__dot_6728) {if (arguments.length<1) {throw $rjs_core.racketContractError("arity mismatch");} else {}var __dot__dot_67 = $rjs_core.Pair.listFromArray(__dot__dot_6728);var __dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_768 = M0.__lt_el;var temp4969 = $rjs_core.UString.make("div");var temp5070 = {'className':$rjs_core.UString.make("container")};var temp5171 = M0.__lt_el(header);var temp5272 = M0.__lt_el(intro);var temp5373 = M0.__lt_el($rjs_core.UString.make("h2"),$rjs_core.UString.make("Examples"));var temp5474 = M0.__lt_el(counter_example);var temp5575 = M0.__lt_el(todo_example);var temp5676 = M0.__lt_el(todo_orig_example);return M1.checked_procedure_check_and_extract(M5.__rjs_quoted__.struct_keyword_procedure,__dot__dot__dot_tdemo_by_rackt_by_main_dot_rkt_97_768,M5.__rjs_quoted__.keyword_procedure_extract,$rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),9)($rjs_core.Pair.makeList($rjs_core.Keyword.make("props")),M1.list(temp5070),temp4969,temp5171,temp5272,temp5373,temp5474,temp5575,temp5676);});var counter_source_code = $rjs_core.UString.make("#lang racketscript/base\n\n(require racketscript/interop\n         rackt)\n\n(define-component counter\n  ;; A call to (define-state name val) defines two variables:\n  ;; - name\n  ;; - set-name!\n  ;; define-state is shorthand for React's useState\n  (define-state COUNT 0)\n\n  (<> \"div\"\n      (<> \"button\" #:props ([ className \"button\" ]\n                            [ type \"button\" ]\n                            [ onClick (lambda (_) (set-COUNT! (sub1 COUNT))) ])\n          \"- 1\")\n\n      (<> \"span\" #:props ([ className \"counter\" ]) COUNT)\n\n      (<> \"button\" #:props ([ className \"button\" ]\n                            [ type \"button\" ]\n                            [ onClick (lambda (_) (set-COUNT! (add1 COUNT))) ])\n          \"+ 1\")))\n\n(provide counter)\n");var todo_source_code = $rjs_core.UString.make("#lang racketscript/base\n\n(require racketscript/interop\n         rackt)\n\n;; A TodoItem is a js obj with \"id\" and \"text\" properties\n(define (mk-todo-item id text) ($/obj [id id] [text text]))\n\n;; A TodoList is a js obj with a \"todos\" property that is a list of TodoItems\n(define (mk-todo-list . items) ($/obj [todos items]))\n\n;; Adds a TodoItem to the given TodoList\n(define (add-todo-item todos item)\n  ($/obj [todos (append ($ todos 'todos) (list item))]))\n\n;; Removes a TodoItem from the given TodoList\n(define (remove-todo-item todos id)\n  (define (item-has-id? id item) (eq? id ($ item 'id)))\n  ($/obj [todos (remove id ($ todos 'todos) item-has-id?)]))\n\n(define INITIAL-TODOS\n  (mk-todo-list\n   (mk-todo-item 0 \"Replace JavaScript with RacketScript\")\n   (mk-todo-item 1 \"Install Rackt\")\n   (mk-todo-item 2 \"Enjoy!\")))\n\n;; TodoListContext is a React context. It propagates a React Reducer,\n;; i.e., an obj with \"state\" and \"dispatch\" props, where:\n;;   \"state\": a TodoList obj\n;;   \"dispatch\": fn that takes a TodoList and action and returns a new TodoList\n;;      Allowed actions:\n;;      - \"add\": adds a todo item to the list\n;;      - \"done\": removes the specified item from the list\n(define TodoListContext (create-context))\n\n;; This the main app component. It consists of two subcomponents:\n;; - todo-input: an input box\n;; - todo-list: the list of items\n(define-component todo-app\n  ;; In the body of a Rackt define-component, a $props variable is\n  ;; implicitly bound to the React \"props\" of this component. It may\n  ;; be used as a plain id, or may be called with property arguments\n\n\n  ;; with-reducer-context defines a new React Reducer with the\n  ;; specified initial value and actions, and then propagates the\n  ;; created state and reducer variables using the specified Context\n  (with-reducer-context TodoListContext\n\n    #:init INITIAL-TODOS\n\n    ;; The #:actions table implicitly constructs a reducer function\n    ;; that consumes a state and action and returns a new state.\n    ;; The state and action values are available as implicit variables\n    ;; $state and $action, respectively.\n    #:actions ([add (add-todo-item $state ($action 'todo))] ; arg must have \"todo\" property\n               [done (remove-todo-item $state ($action 'id))]) ; arg must have \"id\" property\n\n    (<> \"div\"\n        (<> todo-input)\n        (<> todo-list))))\n\n(define-component todo-input\n  ;; The following implicit vars are available in the body of in-reducer-context,\n  ;; - $ctx-state: the Reducer's state\n  ;; - $ctx-dispatch: the Reducer's dispatch function\n  (in-reducer-context TodoListContext\n\n    (define-state TEXT \"\")\n\n    (define (update-text e)\n      (set-TEXT! (js-string->string ($ e 'target 'value)) TEXT))\n\n    (<> \"form\"\n        #:props ([onSubmit\n                  (lambda (e)\n                    (($ e 'preventDefault))\n                    ($ctx-dispatch add [todo (mk-todo-item (#js*.Date.now) TEXT)])\n                    (set-TEXT! \"\"))])\n        (<> \"input\"\n            #:props ([ className \"todo-input\" ]\n                     [ placeholder \"What needs to be done?\" ]\n                     [ value TEXT ]\n                     [ onChange update-text])))))\n\n;; A todo-list component consists of a list of todo-item components\n(define-component todo-list\n  (define (mk-todo-item-component todo) (<> todo-item #:props ([todo todo])))\n  (in-reducer-context TodoListContext\n    (<> \"ul\" (map mk-todo-item-component ($ctx-state 'todos)))))\n\n(define-component todo-item\n  (in-reducer-context TodoListContext\n    (<> \"li\" #:props ([ className \"todo-item\"])\n        ($props 'todo 'text)\n        (<> \"button\"\n            #:props ([ type \"button\" ]\n                     [ className \"button button-clear todo-done-button\"]\n                     [ onClick (lambda (_) ($ctx-dispatch done [id ($props 'todo 'id)]))])\n            \"✔\"))))\n\n(provide todo-app)\n");var todo_orig_source_code = $rjs_core.UString.make("#lang racketscript/base\n\n(require racketscript/interop\n         rackt)\n\n(define StateContext (create-context))\n\n(define default-state\n    ($/obj [ todos (list\n        ($/obj [ id 0 ] [ text \"Replace JavaScript with RacketScript\"])\n        ($/obj [ id 1 ] [ text \"Install Rackt\" ])\n        ($/obj [ id 2 ] [ text \"Enjoy!\" ]))]))\n\n(define (add-todo state action)\n    (append ($ state 'todos) (list ($ action 'todo))))\n\n(define (done-todo state action)\n    (filter (lambda (el) (not (eq? ($ el 'id) ($ action 'id)))) ($ state 'todos)))\n\n(define (reducer state action)\n    (cond\n        [(eq? ($ action 'type) \"add\")\n            ($/obj [ todos (add-todo state action)])]\n        [(eq? ($ action 'type) \"done\")\n            ($/obj [ todos (done-todo state action)])]\n        [else state]))\n\n(define (todo-input props . ..)\n    (define ctx (use-context StateContext))\n    (define dispatch ($ ctx 'dispatch))\n    (define store ($ ctx 'store))\n    (define-values (text set-text) (use-state \"\"))\n\n    (define (update-text e)\n        (set-text (js-string->string ($ e 'target 'value)) text))\n\n    (define (submit-todo e)\n        (($ e 'preventDefault))\n        (dispatch ($/obj [ type \"add\" ]\n                       [ todo ($/obj [ id (#js*.Date.now) ]\n                                     [ text text ])]))\n\n    (set-text \"\"))\n\n    (<el \"form\"\n         #:props ($/obj [ onSubmit submit-todo ])\n            (<el \"input\"\n                #:props ($/obj [ className \"todo-input\" ]\n                               [ placeholder \"What needs to be done?\" ]\n                               [ value text ]\n                               [ onChange update-text]))))\n\n(define (todo-item props . ..)\n    (define ctx (use-context StateContext))\n    (define dispatch ($ ctx 'dispatch))\n    (define (done-todo id)\n        (dispatch ($/obj [ type \"done\" ]\n                         [ id ($ props 'todo 'id) ])))\n\n    (<el \"li\"\n        #:props ($/obj [ className \"todo-item\"])\n            ($ props 'todo 'text)\n            (<el \"button\"\n                #:props ($/obj [ type \"button\" ]\n                            [ className \"button button-clear todo-done-button\"]\n                            [ onClick done-todo ])\n                \"✔\")))\n\n(define (todo-list props . ..)\n    (define ctx (use-context StateContext))\n    (define dispatch ($ ctx 'dispatch))\n    (define store ($ ctx 'store))\n\n    (<el \"ul\"\n         (map (lambda (todo) (<el todo-item #:props ($/obj [todo todo]))) ($ store 'todos))))\n\n(define (todo-app props . ..)\n    (define provider ($ StateContext 'Provider))\n    (define-values (store dispatch) (use-reducer reducer default-state))\n\n    (<el provider\n        #:props ($/obj [ value\n            ($/obj [ store store ]\n                   [ dispatch dispatch ])])\n        (<el \"div\"\n            (<el todo-input))\n            (<el todo-list)))\n\n(provide todo-app)\n");M0.render(M0.__lt_el(app),$rjs_core.UString.make("root"));var __rjs_quoted__ = {};export { __rjs_quoted__ };